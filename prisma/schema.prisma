generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id       String @id @default(uuid())
  username String
  email    String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model MeasuredVariable {
  id        String   @id @default(uuid())
  variable  String   @unique
  mvalias   String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  instruments InstrumentType[]
}

model InstrumentFunction {
  id                 String   @id @default(uuid())
  instrumentfunction String
  alias              String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @default(now()) @updatedAt

  instruments InstrumentType[]
}

model InstrumentType {
  id             String             @id @default(uuid())
  description    String
  mv             MeasuredVariable   @relation(fields: [mvId], references: [id])
  mvId           String
  instfunction   InstrumentFunction @relation(fields: [instfunctionId], references: [id])
  instfunctionId String
  createdAt      DateTime           @default(now())
  updatedAt      DateTime           @default(now()) @updatedAt
}

model Address {
  id         String   @id @default(uuid())
  plusCode   String?
  Add1       String?
  Add2       String?
  City       String   @default("calgary")
  province   String   @default("alberta")
  postalCode String   @default("-")
  Country    String   @default("canada")
  note       String   @default("-")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt
  site       Site     @relation(fields: [siteId], references: [id])
  siteId     String   @unique
}

model Department {
  id          String   @id @default(uuid())
  dept        String
  deptAlias   String   @unique
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt
  sites       Site[]
}

model Site {
  id          String   @id @default(uuid())
  site        String
  siteAlias   String   @unique
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt

  department Department  @relation(fields: [deptId], references: [id])
  deptId     String
  address    Address?
  equipment  Equipment[]
}

model EquipmentType {
  id          String      @id @default(uuid())
  equipAlias  String      @unique
  description String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now()) @updatedAt
  equipment   Equipment[]
}

model Equipment {
  id          String   @id @default(uuid())
  prefix      String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt

  type        EquipmentType @relation(fields: [equiptypeId], references: [id])
  equiptypeId String

  site   Site   @relation(fields: [siteId], references: [id])
  siteId String
}
